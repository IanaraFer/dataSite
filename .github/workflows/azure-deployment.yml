name: AnalyticaCore AI - Azure Deployment

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  AZURE_RESOURCE_GROUP: rg-analyticacore-prod
  AZURE_LOCATION: eastus2
  CONTAINER_REGISTRY: analyticacoreprodregistry.azurecr.io

jobs:
  # Deploy Infrastructure
  infrastructure:
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Deploy Bicep template
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
          template: ./infrastructure/main.bicep
          parameters: environment=prod customDomain=analyticacoreai.com
          failOnStdErr: false

  # Build and Deploy Container App
  container-app:
    runs-on: ubuntu-latest
    needs: infrastructure
    if: github.event_name == 'push'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Build and push Docker image
        run: |
          az acr build --registry ${{ env.CONTAINER_REGISTRY }} --image analyticacore-api:${{ github.sha }} --image analyticacore-api:latest ./backend

      - name: Update Container App
        run: |
          az containerapp update \
            --name analyticacore-prod-api \
            --resource-group ${{ env.AZURE_RESOURCE_GROUP }} \
            --image ${{ env.CONTAINER_REGISTRY }}/analyticacore-api:${{ github.sha }}

  # Deploy Static Web App
  static-web-app:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Build And Deploy Static Web App
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN }}
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          action: "upload"
          app_location: "/website"
          api_location: ""
          output_location: ""